clear all; clc;

%%numerical integration practice-->
x= 1;
y=2;
trueVal= (y-(y^2/2)+ y*log(y)) - (x-(x^2/2)+ x*log(x));

%simpsons 1/3rd method multiple application-->
n=[2 5 10 20];

vec= zeros(length(n), n(end) + 1);

h_simp= (y-x)./(n.*2);  %step size for simp 1/3rd method

%to populate the vec matrix with appropriate step size-->
for i=1:length(n)
    vec(i, 1:n(i)*2+1)= myFuncInt([x:h_simp(i):y]);
end

% to calculate final Intergration-->
for i= 1:length(n)
    I(i)= sum(vec(i, 2:n(i)*2))+ 3*sum(vec(i, 2:2:(n(i)*2+1))) +  sum(vec(i, 1:2:(n(i)*2+1))) ;
    I(i)= (h_simp(i)/3) * (I(i));
    err(i)= abs(trueVal- I(i));
end

loglog(h_simp, err)

% I= (h_simp(1)/3) * (sum(vec(1, 2:n(1)*2))+ 3*sum(vec(1, 2:2:(n(1)*2+1))) +  sum(vec(1, 1:2:(n(1)*2+1)))) ;
